location /upload {
    default_type text/html;
    content_by_lua_file /etc/nginx/lua/upload-resty.lua;
}
location /files {
    default_type application/octet-stream;
    alias /home/tinker/temp/upload/;
}
location /status {
    stub_status on;
    access_log off;
}
location /img {
    #  图片被代理过来以后实际存放的根目录  
    alias /tmp/resize;
    set $width 999;
    set $height 999;
    set $dimens '';
    # 请求中带有尺寸的，分离出尺寸，并拼出文件夹名称  
    if ($uri ~* ^/img_(\d+)x(\d+)/(.*)) {
        set $width $1;
        set $height $2;
        set $image_path $3;
        set $demins _$1x$2;
    }
    if ($uri ~* ^/img/(.*)) {
        set $image_path $1;
    }
    # 本地没有找到图片时，调用获取图片并压缩图片的连接  
    set $image_uri img_filter/$image_path?width=$width&height=$height;
    if (!-f $request_filename) {
        proxy_pass http://127.0.0.1/$image_uri;
        break;
    }
    proxy_store /tmp/nginx/resize$demins/$image_path;
    proxy_store_access user:rw group:rw all:rw;
    proxy_temp_path /tmp/images;
    proxy_set_header Host $host;
}
# 此处为图片实际地址，可以为远程地址  
location /img_filter/ {
    image_filter_buffer 20M;
    proxy_pass http://127.0.0.1/files/;
    image_filter resize $arg_width $arg_height;
    image_filter_jpeg_quality 75;
    allow 127.0.0.0/8;
    deny all;
}
location /cropimages {
    #  图片被代理过来以后实际存放的根目录  
    alias /home/tinker/cropimages;
    set $width 999;
    set $height 999;
    set $dimens '';
    # 请求中带有尺寸的，分离出尺寸，并拼出文件夹名称  
    if ($uri ~* ^/cropimages_(\d+)x(\d+)/(.*)) {
        set $width $1;
        set $height $2;
        set $image_path $3;
        set $demins _$1x$2;
    }
    if ($uri ~* ^/cropimages/(.*)) {
        set $image_path $1;
    }
    # 本地没有找到图片时，调用获取图片并压缩图片的连接  
    set $image_uri filter_crop/$image_path?width=$width&height=$height;
    if (!-f $request_filename) {
        proxy_pass http://127.0.0.1/$image_uri;
        break;
    }
    proxy_store /tmp/nginx/cropimages$demins/$image_path;
    proxy_store_access user:rw group:rw all:rw;
    proxy_temp_path /tmp/images;
    proxy_set_header Host $host;
}
# 此处为图片实际地址，可以为远程地址  
location /filter_crop/ {
    image_filter_buffer 20M;
    image_filter size;
    proxy_pass http://127.0.0.1/files/;
    image_filter crop $arg_width $arg_height;
    image_filter_jpeg_quality 75;
    allow 127.0.0.0/8;
    deny all;
}
location /zip/files/handle/ {
    default_type text/html;
    content_by_lua_file /etc/nginx/lua/zip_files_handle.lua;
}

location /rooter/files/{
    root /home/tinker/temp/upload;
}


# location = /upload {
#     set $storage backend_file;
#     set $bu_checksum on;
#     set $bu_sha1 on;

#     set $file_storage_path /tmp;

#     #here goes your backend path
#     # set $backend_url /bknd;
#     content_by_lua_file /etc/nginx/lua/lib/lib/big-upload.lua;
# }

# location /resume/upload/{
    
# }
# init_by_lua_block {
#         require("shuaicj.upload").init({
#             directory = "/home/tinker/tmp/upload"
#         })  
# }
# location ~ "^/resume_upload/([^/]+)$" {
#     require("shuaicj.upload").upload(ngx.var[1]);
# }